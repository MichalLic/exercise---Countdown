{"version":3,"sources":["timeout.js"],"names":["Timeout","init","setLocalTime","onSetMax","onSend","$","onClearInterval","setCurrentTime","myDate","Date","currentTime","toLocaleTimeString","html","setInterval","btn","on","inputValid","getFormValue","inactiveField","show","element","addClass","hide","removeClass","form","serializeArray","dataValue","each","index","item","name","value","getFieldValue","section","field","find","val","durationEvent","dateValue","currentDate","fullDateSplit","fulldate","split","getMonth","parseInt","dateStop","hour","minute","difference","Math","abs","getTime","secDifference","days","floor","hours","minutes","seconds","isEmptyField","fieldValue","setDifferenceInterval","resetForm","input","attr","setTimeout","reset","max","this","va","console","log","clearInterval","document","ready"],"mappings":"AAAA,GAAAA,UAMAC,KAAA,WACAD,QAAAE,eACAF,QAAAG,WACAH,QAAAI,OAAAC,EAAA,eACAL,QAAAM,mBAIAC,eAAA,WACA,GAAAC,GAAA,GAAAC,MACAC,EAAAF,EAAAG,oBACAN,GAAA,iBAAAO,KAAAF,IAGAR,aAAA,WACAW,YAAA,WACAb,QAAAO,kBACA,MAGAH,OAAA,SAAAU,GACAT,EAAAS,GAAAC,GAAA,QAAA,WACAf,QAAAgB,WAAAhB,QAAAiB,aAAAZ,EAAA,eAEAL,QAAAkB,cAAAb,EAAA,aAIAc,KAAA,SAAAC,GACAf,EAAAe,GAAAC,SAAA,YAGAC,KAAA,SAAAF,GACAf,EAAAe,GAAAG,YAAA,YAGAN,aAAA,SAAAO,GACAA,EAAAA,EAAAC,gBACA,IAAAC,KAIA,OAHArB,GAAAsB,KAAAH,EAAA,SAAAI,EAAAC,GACAH,EAAAG,EAAAC,MAAAD,EAAAE,QAEAL,GAGAM,cAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAE,KAAAD,GAAAE,OAIAC,cAAA,WACA,GAAAC,GAAAtC,QAAAiB,aAAAZ,EAAA,cACAkC,EAAA,GAAA9B,MAEA+B,EAAAF,EAAAG,SAAAC,MAAA,KAEAC,EAAAC,SAAAJ,EAAA,IAAA,EACAK,EAAA,GAAApC,MAAA+B,EAAA,GAAAG,EAAAH,EAAA,GAAAF,EAAAQ,KAAAR,EAAAS,QAEAC,EAAAC,KAAAC,IAAAL,EAAAM,UAAAZ,EAAAY,WACAC,EAAAJ,EAAA,IAEAxC,GACA6C,KAAAJ,KAAAK,MAAAF,EAAA,KAAA,IACAG,MAAAN,KAAAK,MAAAF,EAAA,KAAA,IACAI,QAAAP,KAAAK,MAAAF,EAAA,GAAA,IACAK,QAAAR,KAAAK,MAAAF,EAAA,IAGA/C,GAAA,mBAAAO,KAAA,iBAAAZ,QAAA0D,aAAA1D,QAAAgC,cAAA3B,EAAA,aAAAA,EAAA,YAAA,cACAA,EAAA,aAAAO,KAAA,SAAAJ,EAAA6C,KAAA,WAAA7C,EAAA+C,MAAA,aAAA/C,EAAAgD,QAAA,aAAAhD,EAAAiD,UAIAC,aAAA,SAAAC,GACA,MAAA,IAAAA,EACAA,EAEA,SAKAC,sBAAA,WACA/C,YAAA,WAAAb,QAAAqC,iBAAA,MAGArB,WAAA,SAAAQ,GACA,GAAA,IAAAA,EAAAiB,UACA,IAAAjB,EAAAsB,MACAtB,EAAAsB,KAAA,IACA,IAAAtB,EAAAuB,QACAvB,EAAAuB,OAAA,GAEA,MADA/C,SAAAmB,KAAA,mBACA,CAEAnB,SAAAiB,aAAAZ,EAAA,cACAL,QAAAmB,KAAA,uBACAnB,QAAA4D,wBACA5D,QAAAsB,KAAA,kBACAtB,QAAA6D,UAAAxD,EAAA,eAIAa,cAAA,SAAA4C,GACAA,EAAAC,KAAA,WAAA,aAGAF,UAAA,SAAArC,GACAwC,WAAA,WAAAxC,EAAA,GAAAyC,SAAA,MAKA9D,SAAA,WACAE,EAAA,SAAAU,GAAA,QAAA,WACA,GAAAmD,GAAAtB,SAAAuB,KAAAD,IACAtB,UAAAuB,KAAApC,OAAAmC,IACAC,KAAApC,MAAAmC,MAKA5D,gBAAA,WACA,GAAA8D,GAAApE,QAAA4D,uBACAvD,GAAA,UAAAU,GAAA,QAAA,WACAsD,QAAAC,IAAA,aACAD,QAAAC,IAAAF,GACAG,cAAAvE,QAAA4D,4BAKAvD,GAAAmE,UAAAC,MAAA,WACAzE,QAAAC","file":"app.js","sourcesContent":["var Timeout = {\r\n\r\n    //variables\r\n\r\n\r\n    //init\r\n    init: function () {\r\n        Timeout.setLocalTime();\r\n        Timeout.onSetMax();\r\n        Timeout.onSend($('.btn-start'));\r\n        Timeout.onClearInterval();\r\n    },\r\n\r\n    //function\r\n    setCurrentTime: function () {\r\n        var myDate = new Date();\r\n        var currentTime = myDate.toLocaleTimeString();\r\n        $('.current-time').html(currentTime);\r\n    },\r\n\r\n    setLocalTime: function () {\r\n        setInterval(function () {\r\n            Timeout.setCurrentTime()\r\n        }, 1000);\r\n    },\r\n\r\n    onSend: function (btn) {\r\n        $(btn).on('click', function () {\r\n            Timeout.inputValid(Timeout.getFormValue($('.set-time')));\r\n            // todo get in variables\r\n            Timeout.inactiveField($('.date'));\r\n        });\r\n    },\r\n\r\n    show: function (element) {\r\n        $(element).addClass('visible');\r\n    },\r\n\r\n    hide: function (element) {\r\n        $(element).removeClass('visible');\r\n    },\r\n\r\n    getFormValue: function (form) {\r\n        form = form.serializeArray();\r\n        var dataValue = {};\r\n        $.each(form, function (index, item) {\r\n            dataValue[item.name] = item.value;\r\n        });\r\n        return dataValue;\r\n    },\r\n\r\n    getFieldValue: function (section, field) {\r\n       return section.find(field).val();\r\n    },\r\n\r\n    //show time to designated event\r\n    durationEvent: function () {\r\n        var dateValue = Timeout.getFormValue($('.set-time'));\r\n        var currentDate = new Date();\r\n\r\n        var fullDateSplit = dateValue.fulldate.split('-');\r\n         /* @ TODO Cannot read property 'split' of undefine...*/\r\n        var getMonth = parseInt(fullDateSplit[1]) - 1;\r\n        var dateStop = new Date(fullDateSplit[0], getMonth, fullDateSplit[2], dateValue.hour, dateValue.minute);\r\n\r\n        var difference = Math.abs(dateStop.getTime() - currentDate.getTime());\r\n        var secDifference = difference / 1000;\r\n\r\n        var myDate = {\r\n            days: Math.floor(secDifference / 3600 / 24),\r\n            hours: Math.floor(secDifference / 3600 % 24),\r\n            minutes: Math.floor(secDifference / 60 % 60),\r\n            seconds: Math.floor(secDifference % 60)\r\n        };\r\n\r\n        $('.event-remained').html('To designated ' + Timeout.isEmptyField(Timeout.getFieldValue($('.set-time'), $('#event'))) + ' remained:');\r\n        $('.remained').html('Days: ' + myDate.days + ' Hours: ' + myDate.hours + ' Minutes: ' + myDate.minutes + ' Seconds: ' + myDate.seconds);\r\n    },\r\n\r\n    //check text area and set value\r\n    isEmptyField: function (fieldValue) {\r\n        if (fieldValue != '') {\r\n            return fieldValue;\r\n        } else {\r\n            return 'event';\r\n        }\r\n    },\r\n\r\n    //countdown time to designated event\r\n    setDifferenceInterval: function () {\r\n        setInterval(function () {Timeout.durationEvent()},1000);\r\n    },\r\n\r\n    inputValid: function (form) {\r\n        if (form.fulldate == '' ||\r\n            form.hour == '' ||\r\n            form.hour > 23 ||\r\n            form.minute == '' ||\r\n            form.minute > 59) {\r\n            Timeout.show('.error-message');\r\n            return false\r\n        } else {\r\n            Timeout.getFormValue($('.set-time'));\r\n            Timeout.show('.difference-section');\r\n            Timeout.setDifferenceInterval();\r\n            Timeout.hide('.error-message');\r\n            Timeout.resetForm($('.set-time'));\r\n        }\r\n    },\r\n\r\n    inactiveField: function (input){\r\n        input.attr('disabled', 'disabled');\r\n    },\r\n\r\n    resetForm: function (form) {\r\n        setTimeout(function(){form[0].reset()}, 2000);\r\n    //     @ todo mayby settime in general function??\r\n    },\r\n\r\n    //set max value if field has bad filling\r\n    onSetMax: function () {\r\n        $('.date').on('input', function () {\r\n            var max = parseInt(this.max);\r\n            if (parseInt(this.value) > max) {\r\n                this.value = max;\r\n            }\r\n        });\r\n    },\r\n\r\n    onClearInterval: function () {\r\n        var va = Timeout.setDifferenceInterval();\r\n        $('#clear').on('click', function () {\r\n            console.log('opoapaopa');\r\n            console.log(va);\r\n            clearInterval(Timeout.setDifferenceInterval());\r\n        });\r\n    }\r\n\r\n};\r\n$(document).ready(function () {\r\n    Timeout.init();\r\n});"]}