{"version":3,"sources":["timeout.js"],"names":["Timeout","DATE_VALUE","SET_INTERVAL","SET_TIME_GET_CL","$","DATE_GET_CL","DIFFERENCE_SECTION_CL","RESET_SECTION_CL","ERROR_MESSAGE_CL","init","setLocalTime","onSetMax","onSend","setCurrentTime","myDate","Date","currentTime","toLocaleTimeString","html","setInterval","btn","on","event","preventDefault","calculations","inputValid","getFormValue","show","setDifferenceInterval","disabledFields","onReset","clearInterval","hide","resetForm","activeField","element","addClass","removeClass","form","serializeArray","dataValue","map","item","name","value","getFieldValue","section","field","find","val","durationEvent","currentDate","fullDateSplit","fulldate","split","getMonth","parseInt","dateStop","hour","minute","difference","Math","abs","getTime","secDifference","days","floor","hours","minutes","seconds","formatDate","dayLabel","hourLabel","minuteLabel","secondLabel","remove","append","isEmptyField","fieldValue","isEmpty","each","index","this","input","attr","reset","values","alert","max","document","ready"],"mappings":"AAAA,GAAAA,UAEAC,WAAA,GACAC,aAAA,GACAC,gBAAAC,EAAA,aACAC,YAAAD,EAAA,SACAE,sBAAA,sBACAC,iBAAA,iBACAC,iBAAA,iBAGAC,KAAA,WACAT,QAAAU,eACAV,QAAAW,WACAX,QAAAY,OAAAR,EAAA,gBAIAS,eAAA,WACA,GAAAC,GAAA,GAAAC,MACAC,EAAAF,EAAAG,oBACAb,GAAA,iBAAAc,KAAAF,IAGAN,aAAA,WACAS,YAAA,WACAnB,QAAAa,kBACA,MAGAD,OAAA,SAAAQ,GACAhB,EAAAgB,GAAAC,GAAA,QAAA,WACAC,MAAAC,iBACAvB,QAAAwB,gBAAAxB,QAAAyB,WAAAzB,QAAA0B,aAAA1B,QAAAG,oBACAH,QAAAC,WAAAD,QAAA0B,aAAA1B,QAAAG,iBACAH,QAAA2B,KAAA3B,QAAAM,uBACAN,QAAA4B,wBACA5B,QAAA6B,eAAA7B,QAAAK,aACAL,QAAA8B,QAAA1B,EAAA,WACAJ,QAAA2B,KAAA3B,QAAAO,sBAKAuB,QAAA,SAAAV,GACAhB,EAAAgB,GAAAC,GAAA,QAAA,WACAC,MAAAC,iBACAvB,QAAA+B,gBACA/B,QAAAgC,KAAAhC,QAAAM,uBACAN,QAAAgC,KAAAhC,QAAAO,kBACAP,QAAAiC,UAAAjC,QAAAG,iBACAH,QAAAkC,YAAAlC,QAAAK,gBAIAsB,KAAA,SAAAQ,GACA/B,EAAA+B,GAAAC,SAAA,SAGAJ,KAAA,SAAAG,GACA/B,EAAA+B,GAAAE,YAAA,SAIAX,aAAA,SAAAY,GACAA,EAAAA,EAAAC,gBACA,IAAAC,KAIA,OAHAF,GAAAG,IAAA,SAAAC,GACAF,EAAAE,EAAAC,MAAAD,EAAAE,QAEAJ,GAGAK,cAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAE,KAAAD,GAAAE,OAIAC,cAAA,WACA,GAAAC,GAAA,GAAApC,MACAqC,EAAApD,QAAAC,WAAAoD,SAAAC,MAAA,KACAC,EAAAC,SAAAJ,EAAA,IAAA,EACAK,EAAA,GAAA1C,MAAAqC,EAAA,GAAAG,EAAAH,EAAA,GAAApD,QAAAC,WAAAyD,KAAA1D,QAAAC,WAAA0D,QAEAC,EAAAC,KAAAC,IAAAL,EAAAM,UAAAZ,EAAAY,WACAC,EAAAJ,EAAA,IAEA9C,GACAmD,KAAAJ,KAAAK,MAAAF,EAAA,KAAA,IACAG,MAAAN,KAAAK,MAAAF,EAAA,KAAA,IACAI,QAAAP,KAAAK,MAAAF,EAAA,GAAA,IACAK,QAAAR,KAAAK,MAAAF,EAAA,KAGAM,GACAC,SAAAzD,EAAAmD,MAAA,EAAA,SAAA,QACAO,UAAA1D,EAAAqD,OAAA,EAAA,UAAA,SACAM,YAAA3D,EAAAsD,SAAA,EAAA,YAAA,WACAM,YAAA5D,EAAAuD,SAAA,EAAA,YAAA,WAEA,IAAAvD,EAAAmD,MAAA,GAAAnD,EAAAqD,OAAA,GAAArD,EAAAsD,SAAA,GAAAtD,EAAAuD,SACArE,QAAA+B,gBACA3B,EAAAJ,QAAAM,uBAAA0C,KAAA,YAAA2B,SACAvE,EAAAJ,QAAAM,uBAAA0C,KAAA,cAAA4B,OAAA,gBAEAxE,EAAA,mBAAAc,KAAA,iBAAAlB,QAAA6E,aAAA7E,QAAA6C,cAAA7C,QAAAG,gBAAAC,EAAA,YAAA,cACAA,EAAA,aAAAc,KAAAJ,EAAAmD,KAAAK,EAAAC,SAAAzD,EAAAqD,MAAAG,EAAAE,UAAA1D,EAAAsD,QAAAE,EAAAG,YAAA3D,EAAAuD,QAAAC,EAAAI,eAKAG,aAAA,SAAAC,GACA,MAAA,IAAAA,EACAA,EAEA,SAKAlD,sBAAA,WACA5B,QAAAkD,gBACAlD,QAAAE,aAAAiB,YAAA,WACAnB,QAAAkD,iBACA,MAGAzB,WAAA,SAAAa,GACA,MAAAtC,SAAA+E,WACA,IAAAzC,EAAAe,UACA,IAAAf,EAAAoB,MACA,IAAApB,EAAAqB,QACA3D,QAAA2B,KAAA3B,QAAAQ,mBACA,IAEAR,QAAAgC,KAAAhC,QAAAQ,mBACA,IAIAuE,QAAA,WACA3E,EAAA,UAAA4E,KAAA,SAAAC,EAAAvC,GACA,IAAAwC,KAAAtC,MACAxC,EAAA8E,MAAA9C,SAAA,SAEAhC,EAAA8E,MAAA7C,YAAA,YAKAR,eAAA,SAAAsD,GACAA,EAAAC,KAAA,YAAA,IAGAlD,YAAA,SAAAiD,GACAA,EAAAC,KAAA,YAAA,IAGAnD,UAAA,SAAAK,GACAA,EAAA,GAAA+C,SAGA7D,aAAA,WACA,GAAAR,IAAA,GAAAD,OAAAgD,UACAuB,EAAAtF,QAAA0B,aAAA1B,QAAAG,iBACAiD,EAAAkC,EAAAjC,SAAAC,MAAA,KACAC,EAAAC,SAAAJ,EAAA,IAAA,CAIA,OAAApC,GAHA,GAAAD,MAAAqC,EAAA,GAAAG,EAAAH,EAAA,GAAAkC,EAAA5B,KAAA4B,EAAA3B,QACAI,YAKA3D,EAAA,SAAAgC,SAAA,SACAmD,MAAA,sBACA,IAKA5E,SAAA,WACAX,QAAAK,YAAAgB,GAAA,QAAA,WACA,GAAAmE,GAAAhC,SAAA0B,KAAAM,IACAhC,UAAA0B,KAAAtC,OAAA4C,IACAN,KAAAtC,MAAA4C,MAKAzD,cAAA,WACAA,cAAA/B,QAAAE,eAIAE,GAAAqF,UAAAC,MAAA,WACA1F,QAAAS","file":"app.js","sourcesContent":["var Timeout = {\r\n    //variables\r\n    DATE_VALUE: '',\r\n    SET_INTERVAL: '',\r\n    SET_TIME_GET_CL: $('.set-time'),\r\n    DATE_GET_CL: $('.date'),\r\n    DIFFERENCE_SECTION_CL: '.difference-section',\r\n    RESET_SECTION_CL: '.reset-section',\r\n    ERROR_MESSAGE_CL: '.error-message',\r\n\r\n    //init\r\n    init: function () {\r\n        Timeout.setLocalTime();\r\n        Timeout.onSetMax();\r\n        Timeout.onSend($('.btn-start'));\r\n    },\r\n\r\n    //function\r\n    setCurrentTime: function () {\r\n        var myDate = new Date();\r\n        var currentTime = myDate.toLocaleTimeString();\r\n        $('.current-time').html(currentTime);\r\n    },\r\n\r\n    setLocalTime: function () {\r\n        setInterval(function () {\r\n            Timeout.setCurrentTime()\r\n        }, 1000);\r\n    },\r\n\r\n    onSend: function (btn) {\r\n        $(btn).on('click', function () {\r\n            event.preventDefault();\r\n                if (Timeout.calculations() && Timeout.inputValid(Timeout.getFormValue(Timeout.SET_TIME_GET_CL))) {\r\n                    Timeout.DATE_VALUE = Timeout.getFormValue(Timeout.SET_TIME_GET_CL);\r\n                    Timeout.show(Timeout.DIFFERENCE_SECTION_CL);\r\n                    Timeout.setDifferenceInterval();\r\n                    Timeout.disabledFields(Timeout.DATE_GET_CL);\r\n                    Timeout.onReset($('.clear'));\r\n                    Timeout.show(Timeout.RESET_SECTION_CL);\r\n                }\r\n        });\r\n    },\r\n\r\n    onReset: function (btn) {\r\n        $(btn).on('click', function () {\r\n            event.preventDefault();\r\n            Timeout.clearInterval();\r\n            Timeout.hide(Timeout.DIFFERENCE_SECTION_CL);\r\n            Timeout.hide(Timeout.RESET_SECTION_CL);\r\n            Timeout.resetForm(Timeout.SET_TIME_GET_CL);\r\n            Timeout.activeField(Timeout.DATE_GET_CL);\r\n        })\r\n    },\r\n\r\n    show: function (element) {\r\n        $(element).addClass('show');\r\n    },\r\n\r\n    hide: function (element) {\r\n        $(element).removeClass('show');\r\n    },\r\n\r\n    //get data by map function\r\n    getFormValue: function (form) {\r\n        form = form.serializeArray();\r\n        var dataValue = {};\r\n        form.map(function (item) {\r\n            dataValue[item.name] = item.value;\r\n        });\r\n        return dataValue;\r\n    },\r\n\r\n    getFieldValue: function (section, field) {\r\n        return section.find(field).val();\r\n    },\r\n\r\n    //show time to designated event\r\n    durationEvent: function () {\r\n        var currentDate = new Date();\r\n        var fullDateSplit = Timeout.DATE_VALUE.fulldate.split('-');\r\n        var getMonth = parseInt(fullDateSplit[1]) - 1;\r\n        var dateStop = new Date(fullDateSplit[0], getMonth, fullDateSplit[2], Timeout.DATE_VALUE.hour, Timeout.DATE_VALUE.minute);\r\n\r\n        var difference = Math.abs(dateStop.getTime() - currentDate.getTime());\r\n        var secDifference = difference / 1000;\r\n\r\n        var myDate = {\r\n            days: Math.floor(secDifference / 3600 / 24),\r\n            hours: Math.floor(secDifference / 3600 % 24),\r\n            minutes: Math.floor(secDifference / 60 % 60),\r\n            seconds: Math.floor(secDifference % 60)\r\n        };\r\n\r\n        var formatDate = {\r\n            dayLabel: (myDate.days >= 1 ) ? ' days ' : ' day ',\r\n            hourLabel: (myDate.hours >= 1) ? ' hours ' : ' hour ',\r\n            minuteLabel: (myDate.minutes >= 1 ) ? ' minutes ' : ' minute ',\r\n            secondLabel: (myDate.seconds >= 1) ? ' seconds ' : ' second '\r\n        };\r\n        if (myDate.days == 0 && myDate.hours == 0 && myDate.minutes == 0 && myDate.seconds == 0) {\r\n            Timeout.clearInterval();\r\n            $(Timeout.DIFFERENCE_SECTION_CL).find('.timeout').remove();\r\n            $(Timeout.DIFFERENCE_SECTION_CL).find('.container').append(\"It's time!\")\r\n        } else {\r\n            $('.event-remained').html('To designated ' + Timeout.isEmptyField(Timeout.getFieldValue(Timeout.SET_TIME_GET_CL, $('#event'))) + ' remained:');\r\n            $('.remained').html(myDate.days + formatDate.dayLabel + myDate.hours + formatDate.hourLabel + myDate.minutes + formatDate.minuteLabel + myDate.seconds + formatDate.secondLabel);\r\n        }\r\n    },\r\n\r\n    //check text area and set value\r\n    isEmptyField: function (fieldValue) {\r\n        if (fieldValue != '') {\r\n            return fieldValue;\r\n        } else {\r\n            return 'event';\r\n        }\r\n    },\r\n\r\n    //countdown time to designated event\r\n    setDifferenceInterval: function () {\r\n        Timeout.durationEvent();\r\n        Timeout.SET_INTERVAL = setInterval(function () {\r\n            Timeout.durationEvent();\r\n        }, 1000);\r\n    },\r\n\r\n    inputValid: function (form) {\r\n        if (Timeout.isEmpty() ||\r\n            form.fulldate == '' ||\r\n            form.hour == '' ||\r\n            form.minute == '') {\r\n            Timeout.show(Timeout.ERROR_MESSAGE_CL);\r\n            return false;\r\n        } else {\r\n            Timeout.hide(Timeout.ERROR_MESSAGE_CL);\r\n            return true;\r\n        }\r\n    },\r\n\r\n    isEmpty: function () {\r\n        $('.empty').each(function (index, item) {\r\n            if (this.value == \"\") {\r\n                $(this).addClass('error');\r\n            } else {\r\n                $(this).removeClass('error')\r\n            }\r\n        });\r\n    },\r\n\r\n    disabledFields: function (input) {\r\n        input.attr('disabled', true);\r\n    },\r\n\r\n    activeField: function (input) {\r\n        input.attr('disabled', false);\r\n    },\r\n\r\n    resetForm: function (form) {\r\n        form[0].reset();\r\n    },\r\n\r\n    calculations: function () {\r\n        var currentTime = new Date().getTime();\r\n        var values = Timeout.getFormValue(Timeout.SET_TIME_GET_CL);\r\n        var fullDateSplit = values.fulldate.split('-');\r\n        var getMonth = parseInt(fullDateSplit[1]) - 1;\r\n        var eventTime = new Date(fullDateSplit[0], getMonth, fullDateSplit[2], values.hour, values.minute);\r\n        var eventTimeString = eventTime.getTime();\r\n\r\n        if (currentTime < eventTimeString) {\r\n            return true;\r\n        } else {\r\n            $('input').addClass('error');\r\n            alert('That date passed!');\r\n            return false;\r\n        }\r\n    },\r\n\r\n    //set max value if field has bad filling\r\n    onSetMax: function () {\r\n        Timeout.DATE_GET_CL.on('input', function () {\r\n            var max = parseInt(this.max);\r\n            if (parseInt(this.value) > max) {\r\n                this.value = max;\r\n            }\r\n        });\r\n    },\r\n\r\n    clearInterval: function () {\r\n        clearInterval(Timeout.SET_INTERVAL);\r\n    }\r\n\r\n};\r\n$(document).ready(function () {\r\n    Timeout.init();\r\n});"]}